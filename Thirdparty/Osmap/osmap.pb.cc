// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmap.proto
// Protobuf C++ Version: 5.27.2

#include "osmap.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SerializedPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedPosition::SerializedPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedPositionDefaultTypeInternal() {}
  union {
    SerializedPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedPositionDefaultTypeInternal _SerializedPosition_default_instance_;

inline constexpr SerializedPose::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : element_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedPose::SerializedPose(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedPoseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedPoseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedPoseDefaultTypeInternal() {}
  union {
    SerializedPose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedPoseDefaultTypeInternal _SerializedPose_default_instance_;

inline constexpr SerializedKeypoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ptx_{0},
        pty_{0},
        angle_{0},
        octave_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKeypoint::SerializedKeypoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKeypointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKeypointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKeypointDefaultTypeInternal() {}
  union {
    SerializedKeypoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKeypointDefaultTypeInternal _SerializedKeypoint_default_instance_;

inline constexpr SerializedK::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fx_{0},
        fy_{0},
        cx_{0},
        cy_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedK::SerializedK(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKDefaultTypeInternal() {}
  union {
    SerializedK _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKDefaultTypeInternal _SerializedK_default_instance_;

inline constexpr SerializedEllipsoid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : element_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedEllipsoid::SerializedEllipsoid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedEllipsoidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedEllipsoidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedEllipsoidDefaultTypeInternal() {}
  union {
    SerializedEllipsoid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedEllipsoidDefaultTypeInternal _SerializedEllipsoid_default_instance_;

inline constexpr SerializedDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : block_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedDescriptor::SerializedDescriptor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedDescriptorDefaultTypeInternal() {}
  union {
    SerializedDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedDescriptorDefaultTypeInternal _SerializedDescriptor_default_instance_;

inline constexpr SerializedBBox2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xmin_{0},
        ymin_{0},
        xmax_{0},
        ymax_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedBBox2::SerializedBBox2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedBBox2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedBBox2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedBBox2DefaultTypeInternal() {}
  union {
    SerializedBBox2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedBBox2DefaultTypeInternal _SerializedBBox2_default_instance_;

inline constexpr SerializedObjectTrack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kf_bboxes_{},
        kf_indices_{},
        _kf_indices_cached_byte_size_{0},
        kf_scores_{},
        id_{0u},
        cat_{0u},
        last_frame_id_{0u},
        color_r_{0u},
        color_g_{0u},
        color_b_{0u},
        status_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedObjectTrack::SerializedObjectTrack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedObjectTrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedObjectTrackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedObjectTrackDefaultTypeInternal() {}
  union {
    SerializedObjectTrack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedObjectTrackDefaultTypeInternal _SerializedObjectTrack_default_instance_;

inline constexpr SerializedMappoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        briefdescriptor_{nullptr},
        id_{0u},
        visible_{0},
        found_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedMappoint::SerializedMappoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedMappointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedMappointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedMappointDefaultTypeInternal() {}
  union {
    SerializedMappoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedMappointDefaultTypeInternal _SerializedMappoint_default_instance_;

inline constexpr SerializedMapobject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ellipsoid_{nullptr},
        object_track_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedMapobject::SerializedMapobject(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedMapobjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedMapobjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedMapobjectDefaultTypeInternal() {}
  union {
    SerializedMapobject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedMapobjectDefaultTypeInternal _SerializedMapobject_default_instance_;

inline constexpr SerializedKeyframe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        loopedgesids_{},
        _loopedgesids_cached_byte_size_{0},
        pose_{nullptr},
        kmatrix_{nullptr},
        id_{0u},
        kindex_{0u},
        timestamp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKeyframe::SerializedKeyframe(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKeyframeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKeyframeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKeyframeDefaultTypeInternal() {}
  union {
    SerializedKeyframe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKeyframeDefaultTypeInternal _SerializedKeyframe_default_instance_;

inline constexpr SerializedKArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : k_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKArray::SerializedKArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKArrayDefaultTypeInternal() {}
  union {
    SerializedKArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKArrayDefaultTypeInternal _SerializedKArray_default_instance_;

inline constexpr SerializedFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        keypoint_{nullptr},
        briefdescriptor_{nullptr},
        mappoint_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedFeature::SerializedFeature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedFeatureDefaultTypeInternal() {}
  union {
    SerializedFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedFeatureDefaultTypeInternal _SerializedFeature_default_instance_;

inline constexpr SerializedObjectTrackArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : objecttrack_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedObjectTrackArray::SerializedObjectTrackArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedObjectTrackArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedObjectTrackArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedObjectTrackArrayDefaultTypeInternal() {}
  union {
    SerializedObjectTrackArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedObjectTrackArrayDefaultTypeInternal _SerializedObjectTrackArray_default_instance_;

inline constexpr SerializedMappointArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mappoint_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedMappointArray::SerializedMappointArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedMappointArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedMappointArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedMappointArrayDefaultTypeInternal() {}
  union {
    SerializedMappointArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedMappointArrayDefaultTypeInternal _SerializedMappointArray_default_instance_;

inline constexpr SerializedMapobjectArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mapobject_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedMapobjectArray::SerializedMapobjectArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedMapobjectArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedMapobjectArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedMapobjectArrayDefaultTypeInternal() {}
  union {
    SerializedMapobjectArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedMapobjectArrayDefaultTypeInternal _SerializedMapobjectArray_default_instance_;

inline constexpr SerializedKeyframeFeatures::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : feature_{},
        keyframe_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKeyframeFeatures::SerializedKeyframeFeatures(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKeyframeFeaturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKeyframeFeaturesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKeyframeFeaturesDefaultTypeInternal() {}
  union {
    SerializedKeyframeFeatures _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKeyframeFeaturesDefaultTypeInternal _SerializedKeyframeFeatures_default_instance_;

inline constexpr SerializedKeyframeArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : keyframe_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKeyframeArray::SerializedKeyframeArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKeyframeArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKeyframeArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKeyframeArrayDefaultTypeInternal() {}
  union {
    SerializedKeyframeArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKeyframeArrayDefaultTypeInternal _SerializedKeyframeArray_default_instance_;

inline constexpr SerializedKeyframeFeaturesArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : feature_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SerializedKeyframeFeaturesArray::SerializedKeyframeFeaturesArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SerializedKeyframeFeaturesArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerializedKeyframeFeaturesArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerializedKeyframeFeaturesArrayDefaultTypeInternal() {}
  union {
    SerializedKeyframeFeaturesArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerializedKeyframeFeaturesArrayDefaultTypeInternal _SerializedKeyframeFeaturesArray_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_osmap_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_osmap_2eproto = nullptr;
const ::uint32_t
    TableStruct_osmap_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedDescriptor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedDescriptor, _impl_.block_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedPose, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedPose, _impl_.element_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedPosition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedPosition, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::SerializedPosition, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::SerializedPosition, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedKeypoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKeypoint, _impl_.ptx_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeypoint, _impl_.pty_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeypoint, _impl_.angle_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeypoint, _impl_.octave_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedK, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedK, _impl_.fx_),
        PROTOBUF_FIELD_OFFSET(::SerializedK, _impl_.fy_),
        PROTOBUF_FIELD_OFFSET(::SerializedK, _impl_.cx_),
        PROTOBUF_FIELD_OFFSET(::SerializedK, _impl_.cy_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedKArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKArray, _impl_.k_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedEllipsoid, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedEllipsoid, _impl_.element_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_.visible_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_.found_),
        PROTOBUF_FIELD_OFFSET(::SerializedMappoint, _impl_.briefdescriptor_),
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedMappointArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedMappointArray, _impl_.mappoint_),
        PROTOBUF_FIELD_OFFSET(::SerializedMapobject, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SerializedMapobject, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedMapobject, _impl_.ellipsoid_),
        PROTOBUF_FIELD_OFFSET(::SerializedMapobject, _impl_.object_track_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedMapobjectArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedMapobjectArray, _impl_.mapobject_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedBBox2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedBBox2, _impl_.xmin_),
        PROTOBUF_FIELD_OFFSET(::SerializedBBox2, _impl_.ymin_),
        PROTOBUF_FIELD_OFFSET(::SerializedBBox2, _impl_.xmax_),
        PROTOBUF_FIELD_OFFSET(::SerializedBBox2, _impl_.ymax_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.cat_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.last_frame_id_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.color_r_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.color_g_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.color_b_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.kf_bboxes_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.kf_indices_),
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrack, _impl_.kf_scores_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrackArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedObjectTrackArray, _impl_.objecttrack_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.kmatrix_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.kindex_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.loopedgesids_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframe, _impl_.timestamp_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeArray, _impl_.keyframe_),
        PROTOBUF_FIELD_OFFSET(::SerializedFeature, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SerializedFeature, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedFeature, _impl_.mappoint_id_),
        PROTOBUF_FIELD_OFFSET(::SerializedFeature, _impl_.keypoint_),
        PROTOBUF_FIELD_OFFSET(::SerializedFeature, _impl_.briefdescriptor_),
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeFeatures, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeFeatures, _impl_.keyframe_id_),
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeFeatures, _impl_.feature_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeFeaturesArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SerializedKeyframeFeaturesArray, _impl_.feature_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::SerializedDescriptor)},
        {9, -1, -1, sizeof(::SerializedPose)},
        {18, -1, -1, sizeof(::SerializedPosition)},
        {29, -1, -1, sizeof(::SerializedKeypoint)},
        {41, -1, -1, sizeof(::SerializedK)},
        {53, -1, -1, sizeof(::SerializedKArray)},
        {62, -1, -1, sizeof(::SerializedEllipsoid)},
        {71, 84, -1, sizeof(::SerializedMappoint)},
        {89, -1, -1, sizeof(::SerializedMappointArray)},
        {98, 108, -1, sizeof(::SerializedMapobject)},
        {110, -1, -1, sizeof(::SerializedMapobjectArray)},
        {119, -1, -1, sizeof(::SerializedBBox2)},
        {131, -1, -1, sizeof(::SerializedObjectTrack)},
        {149, -1, -1, sizeof(::SerializedObjectTrackArray)},
        {158, 172, -1, sizeof(::SerializedKeyframe)},
        {178, -1, -1, sizeof(::SerializedKeyframeArray)},
        {187, 198, -1, sizeof(::SerializedFeature)},
        {201, -1, -1, sizeof(::SerializedKeyframeFeatures)},
        {211, -1, -1, sizeof(::SerializedKeyframeFeaturesArray)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_SerializedDescriptor_default_instance_._instance,
    &::_SerializedPose_default_instance_._instance,
    &::_SerializedPosition_default_instance_._instance,
    &::_SerializedKeypoint_default_instance_._instance,
    &::_SerializedK_default_instance_._instance,
    &::_SerializedKArray_default_instance_._instance,
    &::_SerializedEllipsoid_default_instance_._instance,
    &::_SerializedMappoint_default_instance_._instance,
    &::_SerializedMappointArray_default_instance_._instance,
    &::_SerializedMapobject_default_instance_._instance,
    &::_SerializedMapobjectArray_default_instance_._instance,
    &::_SerializedBBox2_default_instance_._instance,
    &::_SerializedObjectTrack_default_instance_._instance,
    &::_SerializedObjectTrackArray_default_instance_._instance,
    &::_SerializedKeyframe_default_instance_._instance,
    &::_SerializedKeyframeArray_default_instance_._instance,
    &::_SerializedFeature_default_instance_._instance,
    &::_SerializedKeyframeFeatures_default_instance_._instance,
    &::_SerializedKeyframeFeaturesArray_default_instance_._instance,
};
const char descriptor_table_protodef_osmap_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013osmap.proto\"%\n\024SerializedDescriptor\022\r\n"
    "\005block\030\001 \003(\007\"!\n\016SerializedPose\022\017\n\007elemen"
    "t\030\001 \003(\002\"5\n\022SerializedPosition\022\t\n\001x\030\001 \001(\002"
    "\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"M\n\022SerializedKeyp"
    "oint\022\013\n\003ptx\030\001 \001(\002\022\013\n\003pty\030\002 \001(\002\022\r\n\005angle\030"
    "\003 \001(\002\022\016\n\006octave\030\004 \001(\002\"=\n\013SerializedK\022\n\n\002"
    "fx\030\001 \001(\002\022\n\n\002fy\030\002 \001(\002\022\n\n\002cx\030\003 \001(\002\022\n\n\002cy\030\004"
    " \001(\002\"+\n\020SerializedKArray\022\027\n\001k\030\001 \003(\0132\014.Se"
    "rializedK\"&\n\023SerializedEllipsoid\022\017\n\007elem"
    "ent\030\001 \003(\002\"\227\001\n\022SerializedMappoint\022\n\n\002id\030\001"
    " \001(\r\022%\n\010position\030\002 \001(\0132\023.SerializedPosit"
    "ion\022\017\n\007visible\030\003 \001(\002\022\r\n\005found\030\004 \001(\002\022.\n\017b"
    "riefdescriptor\030\005 \001(\0132\025.SerializedDescrip"
    "tor\"@\n\027SerializedMappointArray\022%\n\010mappoi"
    "nt\030\001 \003(\0132\023.SerializedMappoint\"W\n\023Seriali"
    "zedMapobject\022\'\n\tellipsoid\030\001 \001(\0132\024.Serial"
    "izedEllipsoid\022\027\n\017object_track_id\030\002 \001(\r\"C"
    "\n\030SerializedMapobjectArray\022\'\n\tmapobject\030"
    "\001 \003(\0132\024.SerializedMapobject\"I\n\017Serialize"
    "dBBox2\022\014\n\004xmin\030\001 \001(\002\022\014\n\004ymin\030\002 \001(\002\022\014\n\004xm"
    "ax\030\003 \001(\002\022\014\n\004ymax\030\004 \001(\002\"\326\001\n\025SerializedObj"
    "ectTrack\022\n\n\002id\030\001 \001(\r\022\013\n\003cat\030\002 \001(\r\022\025\n\rlas"
    "t_frame_id\030\003 \001(\r\022\017\n\007color_r\030\004 \001(\r\022\017\n\007col"
    "or_g\030\005 \001(\r\022\017\n\007color_b\030\006 \001(\r\022\016\n\006status\030\007 "
    "\001(\r\022#\n\tkf_bboxes\030\010 \003(\0132\020.SerializedBBox2"
    "\022\022\n\nkf_indices\030\t \003(\r\022\021\n\tkf_scores\030\n \003(\001\""
    "I\n\032SerializedObjectTrackArray\022+\n\013objectt"
    "rack\030\001 \003(\0132\026.SerializedObjectTrack\"\227\001\n\022S"
    "erializedKeyframe\022\n\n\002id\030\001 \001(\r\022\035\n\004pose\030\002 "
    "\001(\0132\017.SerializedPose\022\035\n\007kmatrix\030\003 \001(\0132\014."
    "SerializedK\022\016\n\006kindex\030\004 \001(\r\022\024\n\014loopedges"
    "ids\030\005 \003(\r\022\021\n\ttimestamp\030\006 \001(\001\"@\n\027Serializ"
    "edKeyframeArray\022%\n\010keyframe\030\001 \003(\0132\023.Seri"
    "alizedKeyframe\"\177\n\021SerializedFeature\022\023\n\013m"
    "appoint_id\030\002 \001(\r\022%\n\010keypoint\030\003 \001(\0132\023.Ser"
    "ializedKeypoint\022.\n\017briefdescriptor\030\004 \001(\013"
    "2\025.SerializedDescriptor\"V\n\032SerializedKey"
    "frameFeatures\022\023\n\013keyframe_id\030\001 \001(\r\022#\n\007fe"
    "ature\030\002 \003(\0132\022.SerializedFeature\"O\n\037Seria"
    "lizedKeyframeFeaturesArray\022,\n\007feature\030\001 "
    "\003(\0132\033.SerializedKeyframeFeaturesb\006proto3"
};
static ::absl::once_flag descriptor_table_osmap_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_osmap_2eproto = {
    false,
    false,
    1640,
    descriptor_table_protodef_osmap_2eproto,
    "osmap.proto",
    &descriptor_table_osmap_2eproto_once,
    nullptr,
    0,
    19,
    schemas,
    file_default_instances,
    TableStruct_osmap_2eproto::offsets,
    file_level_enum_descriptors_osmap_2eproto,
    file_level_service_descriptors_osmap_2eproto,
};
// ===================================================================

class SerializedDescriptor::_Internal {
 public:
};

SerializedDescriptor::SerializedDescriptor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE SerializedDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedDescriptor& from_msg)
      : block_{visibility, arena, from.block_},
        _cached_size_{0} {}

SerializedDescriptor::SerializedDescriptor(
    ::google::protobuf::Arena* arena,
    const SerializedDescriptor& from)
    : ::google::protobuf::Message(arena) {
  SerializedDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE SerializedDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : block_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedDescriptor::~SerializedDescriptor() {
  // @@protoc_insertion_point(destructor:SerializedDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedDescriptor::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedDescriptor, _impl_._cached_size_),
              false,
          },
          &SerializedDescriptor::MergeImpl,
          &SerializedDescriptor::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SerializedDescriptor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedDescriptor_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedDescriptor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated fixed32 block = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedDescriptor, _impl_.block_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated fixed32 block = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedDescriptor, _impl_.block_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedDescriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedDescriptor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 block = 1;
  if (this->_internal_block_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_block(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedDescriptor)
  return target;
}

::size_t SerializedDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated fixed32 block = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_block_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedDescriptor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedDescriptor*>(&to_msg);
  auto& from = static_cast<const SerializedDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_block()->MergeFrom(from._internal_block());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedDescriptor::CopyFrom(const SerializedDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedDescriptor::InternalSwap(SerializedDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.block_.InternalSwap(&other->_impl_.block_);
}

::google::protobuf::Metadata SerializedDescriptor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedPose::_Internal {
 public:
};

SerializedPose::SerializedPose(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedPose)
}
inline PROTOBUF_NDEBUG_INLINE SerializedPose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedPose& from_msg)
      : element_{visibility, arena, from.element_},
        _cached_size_{0} {}

SerializedPose::SerializedPose(
    ::google::protobuf::Arena* arena,
    const SerializedPose& from)
    : ::google::protobuf::Message(arena) {
  SerializedPose* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedPose)
}
inline PROTOBUF_NDEBUG_INLINE SerializedPose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : element_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedPose::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedPose::~SerializedPose() {
  // @@protoc_insertion_point(destructor:SerializedPose)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedPose::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedPose::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedPose, _impl_._cached_size_),
              false,
          },
          &SerializedPose::MergeImpl,
          &SerializedPose::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SerializedPose::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedPose_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedPose>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float element = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedPose, _impl_.element_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float element = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedPose, _impl_.element_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedPose::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedPose)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedPose::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedPose)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float element = 1;
  if (this->_internal_element_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_element(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedPose)
  return target;
}

::size_t SerializedPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedPose)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float element = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_element_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedPose::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedPose*>(&to_msg);
  auto& from = static_cast<const SerializedPose&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedPose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_element()->MergeFrom(from._internal_element());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedPose::CopyFrom(const SerializedPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedPose::InternalSwap(SerializedPose* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
}

::google::protobuf::Metadata SerializedPose::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedPosition::_Internal {
 public:
};

SerializedPosition::SerializedPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedPosition)
}
SerializedPosition::SerializedPosition(
    ::google::protobuf::Arena* arena, const SerializedPosition& from)
    : SerializedPosition(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SerializedPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
SerializedPosition::~SerializedPosition() {
  // @@protoc_insertion_point(destructor:SerializedPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedPosition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_._cached_size_),
              false,
          },
          &SerializedPosition::MergeImpl,
          &SerializedPosition::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SerializedPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedPosition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedPosition)
  return target;
}

::size_t SerializedPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedPosition*>(&to_msg);
  auto& from = static_cast<const SerializedPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedPosition::CopyFrom(const SerializedPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedPosition::InternalSwap(SerializedPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.z_)
      + sizeof(SerializedPosition::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(SerializedPosition, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata SerializedPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKeypoint::_Internal {
 public:
};

SerializedKeypoint::SerializedKeypoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKeypoint)
}
SerializedKeypoint::SerializedKeypoint(
    ::google::protobuf::Arena* arena, const SerializedKeypoint& from)
    : SerializedKeypoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedKeypoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ptx_),
           0,
           offsetof(Impl_, octave_) -
               offsetof(Impl_, ptx_) +
               sizeof(Impl_::octave_));
}
SerializedKeypoint::~SerializedKeypoint() {
  // @@protoc_insertion_point(destructor:SerializedKeypoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKeypoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKeypoint::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_._cached_size_),
              false,
          },
          &SerializedKeypoint::MergeImpl,
          &SerializedKeypoint::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> SerializedKeypoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedKeypoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKeypoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float octave = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.octave_)}},
    // float ptx = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.ptx_)}},
    // float pty = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.pty_)}},
    // float angle = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.angle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float ptx = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.ptx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pty = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.pty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float angle = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.angle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float octave = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.octave_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedKeypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeypoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ptx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.octave_) -
      reinterpret_cast<char*>(&_impl_.ptx_)) + sizeof(_impl_.octave_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKeypoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeypoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float ptx = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ptx = this->_internal_ptx();
  ::uint32_t raw_ptx;
  memcpy(&raw_ptx, &tmp_ptx, sizeof(tmp_ptx));
  if (raw_ptx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_ptx(), target);
  }

  // float pty = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pty = this->_internal_pty();
  ::uint32_t raw_pty;
  memcpy(&raw_pty, &tmp_pty, sizeof(tmp_pty));
  if (raw_pty != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_pty(), target);
  }

  // float angle = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_angle = this->_internal_angle();
  ::uint32_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_angle(), target);
  }

  // float octave = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_octave = this->_internal_octave();
  ::uint32_t raw_octave;
  memcpy(&raw_octave, &tmp_octave, sizeof(tmp_octave));
  if (raw_octave != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_octave(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeypoint)
  return target;
}

::size_t SerializedKeypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeypoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float ptx = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ptx = this->_internal_ptx();
  ::uint32_t raw_ptx;
  memcpy(&raw_ptx, &tmp_ptx, sizeof(tmp_ptx));
  if (raw_ptx != 0) {
    total_size += 5;
  }

  // float pty = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pty = this->_internal_pty();
  ::uint32_t raw_pty;
  memcpy(&raw_pty, &tmp_pty, sizeof(tmp_pty));
  if (raw_pty != 0) {
    total_size += 5;
  }

  // float angle = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_angle = this->_internal_angle();
  ::uint32_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    total_size += 5;
  }

  // float octave = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_octave = this->_internal_octave();
  ::uint32_t raw_octave;
  memcpy(&raw_octave, &tmp_octave, sizeof(tmp_octave));
  if (raw_octave != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKeypoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKeypoint*>(&to_msg);
  auto& from = static_cast<const SerializedKeypoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeypoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ptx = from._internal_ptx();
  ::uint32_t raw_ptx;
  memcpy(&raw_ptx, &tmp_ptx, sizeof(tmp_ptx));
  if (raw_ptx != 0) {
    _this->_impl_.ptx_ = from._impl_.ptx_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pty = from._internal_pty();
  ::uint32_t raw_pty;
  memcpy(&raw_pty, &tmp_pty, sizeof(tmp_pty));
  if (raw_pty != 0) {
    _this->_impl_.pty_ = from._impl_.pty_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_angle = from._internal_angle();
  ::uint32_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    _this->_impl_.angle_ = from._impl_.angle_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_octave = from._internal_octave();
  ::uint32_t raw_octave;
  memcpy(&raw_octave, &tmp_octave, sizeof(tmp_octave));
  if (raw_octave != 0) {
    _this->_impl_.octave_ = from._impl_.octave_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKeypoint::CopyFrom(const SerializedKeypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKeypoint::InternalSwap(SerializedKeypoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.octave_)
      + sizeof(SerializedKeypoint::_impl_.octave_)
      - PROTOBUF_FIELD_OFFSET(SerializedKeypoint, _impl_.ptx_)>(
          reinterpret_cast<char*>(&_impl_.ptx_),
          reinterpret_cast<char*>(&other->_impl_.ptx_));
}

::google::protobuf::Metadata SerializedKeypoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedK::_Internal {
 public:
};

SerializedK::SerializedK(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedK)
}
SerializedK::SerializedK(
    ::google::protobuf::Arena* arena, const SerializedK& from)
    : SerializedK(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SerializedK::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedK::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fx_),
           0,
           offsetof(Impl_, cy_) -
               offsetof(Impl_, fx_) +
               sizeof(Impl_::cy_));
}
SerializedK::~SerializedK() {
  // @@protoc_insertion_point(destructor:SerializedK)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedK::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedK::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedK, _impl_._cached_size_),
              false,
          },
          &SerializedK::MergeImpl,
          &SerializedK::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> SerializedK::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedK_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedK>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float cy = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.cy_)}},
    // float fx = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.fx_)}},
    // float fy = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.fy_)}},
    // float cx = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.cx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float fx = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.fx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float fy = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.fy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float cx = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.cx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float cy = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.cy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedK::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedK)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.fx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cy_) -
      reinterpret_cast<char*>(&_impl_.fx_)) + sizeof(_impl_.cy_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedK::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedK)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float fx = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fx = this->_internal_fx();
  ::uint32_t raw_fx;
  memcpy(&raw_fx, &tmp_fx, sizeof(tmp_fx));
  if (raw_fx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_fx(), target);
  }

  // float fy = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fy = this->_internal_fy();
  ::uint32_t raw_fy;
  memcpy(&raw_fy, &tmp_fy, sizeof(tmp_fy));
  if (raw_fy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_fy(), target);
  }

  // float cx = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cx = this->_internal_cx();
  ::uint32_t raw_cx;
  memcpy(&raw_cx, &tmp_cx, sizeof(tmp_cx));
  if (raw_cx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_cx(), target);
  }

  // float cy = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cy = this->_internal_cy();
  ::uint32_t raw_cy;
  memcpy(&raw_cy, &tmp_cy, sizeof(tmp_cy));
  if (raw_cy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_cy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedK)
  return target;
}

::size_t SerializedK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedK)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float fx = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fx = this->_internal_fx();
  ::uint32_t raw_fx;
  memcpy(&raw_fx, &tmp_fx, sizeof(tmp_fx));
  if (raw_fx != 0) {
    total_size += 5;
  }

  // float fy = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fy = this->_internal_fy();
  ::uint32_t raw_fy;
  memcpy(&raw_fy, &tmp_fy, sizeof(tmp_fy));
  if (raw_fy != 0) {
    total_size += 5;
  }

  // float cx = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cx = this->_internal_cx();
  ::uint32_t raw_cx;
  memcpy(&raw_cx, &tmp_cx, sizeof(tmp_cx));
  if (raw_cx != 0) {
    total_size += 5;
  }

  // float cy = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cy = this->_internal_cy();
  ::uint32_t raw_cy;
  memcpy(&raw_cy, &tmp_cy, sizeof(tmp_cy));
  if (raw_cy != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedK::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedK*>(&to_msg);
  auto& from = static_cast<const SerializedK&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedK)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fx = from._internal_fx();
  ::uint32_t raw_fx;
  memcpy(&raw_fx, &tmp_fx, sizeof(tmp_fx));
  if (raw_fx != 0) {
    _this->_impl_.fx_ = from._impl_.fx_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_fy = from._internal_fy();
  ::uint32_t raw_fy;
  memcpy(&raw_fy, &tmp_fy, sizeof(tmp_fy));
  if (raw_fy != 0) {
    _this->_impl_.fy_ = from._impl_.fy_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cx = from._internal_cx();
  ::uint32_t raw_cx;
  memcpy(&raw_cx, &tmp_cx, sizeof(tmp_cx));
  if (raw_cx != 0) {
    _this->_impl_.cx_ = from._impl_.cx_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_cy = from._internal_cy();
  ::uint32_t raw_cy;
  memcpy(&raw_cy, &tmp_cy, sizeof(tmp_cy));
  if (raw_cy != 0) {
    _this->_impl_.cy_ = from._impl_.cy_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedK::CopyFrom(const SerializedK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedK::InternalSwap(SerializedK* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.cy_)
      + sizeof(SerializedK::_impl_.cy_)
      - PROTOBUF_FIELD_OFFSET(SerializedK, _impl_.fx_)>(
          reinterpret_cast<char*>(&_impl_.fx_),
          reinterpret_cast<char*>(&other->_impl_.fx_));
}

::google::protobuf::Metadata SerializedK::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKArray::_Internal {
 public:
};

SerializedKArray::SerializedKArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedKArray& from_msg)
      : k_{visibility, arena, from.k_},
        _cached_size_{0} {}

SerializedKArray::SerializedKArray(
    ::google::protobuf::Arena* arena,
    const SerializedKArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedKArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedKArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : k_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedKArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedKArray::~SerializedKArray() {
  // @@protoc_insertion_point(destructor:SerializedKArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKArray, _impl_._cached_size_),
              false,
          },
          &SerializedKArray::MergeImpl,
          &SerializedKArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedKArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedKArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedK k = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKArray, _impl_.k_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedK k = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKArray, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedK>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedKArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.k_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedK k = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_k_size());
       i < n; i++) {
    const auto& repfield = this->_internal_k().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKArray)
  return target;
}

::size_t SerializedKArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedK k = 1;
  total_size += 1UL * this->_internal_k_size();
  for (const auto& msg : this->_internal_k()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKArray*>(&to_msg);
  auto& from = static_cast<const SerializedKArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_k()->MergeFrom(
      from._internal_k());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKArray::CopyFrom(const SerializedKArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKArray::InternalSwap(SerializedKArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.k_.InternalSwap(&other->_impl_.k_);
}

::google::protobuf::Metadata SerializedKArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedEllipsoid::_Internal {
 public:
};

SerializedEllipsoid::SerializedEllipsoid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedEllipsoid)
}
inline PROTOBUF_NDEBUG_INLINE SerializedEllipsoid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedEllipsoid& from_msg)
      : element_{visibility, arena, from.element_},
        _cached_size_{0} {}

SerializedEllipsoid::SerializedEllipsoid(
    ::google::protobuf::Arena* arena,
    const SerializedEllipsoid& from)
    : ::google::protobuf::Message(arena) {
  SerializedEllipsoid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedEllipsoid)
}
inline PROTOBUF_NDEBUG_INLINE SerializedEllipsoid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : element_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedEllipsoid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedEllipsoid::~SerializedEllipsoid() {
  // @@protoc_insertion_point(destructor:SerializedEllipsoid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedEllipsoid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedEllipsoid::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedEllipsoid, _impl_._cached_size_),
              false,
          },
          &SerializedEllipsoid::MergeImpl,
          &SerializedEllipsoid::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SerializedEllipsoid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedEllipsoid_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedEllipsoid>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float element = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedEllipsoid, _impl_.element_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float element = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedEllipsoid, _impl_.element_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedEllipsoid::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedEllipsoid)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedEllipsoid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedEllipsoid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float element = 1;
  if (this->_internal_element_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_element(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedEllipsoid)
  return target;
}

::size_t SerializedEllipsoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedEllipsoid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float element = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_element_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedEllipsoid::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedEllipsoid*>(&to_msg);
  auto& from = static_cast<const SerializedEllipsoid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedEllipsoid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_element()->MergeFrom(from._internal_element());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedEllipsoid::CopyFrom(const SerializedEllipsoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedEllipsoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedEllipsoid::InternalSwap(SerializedEllipsoid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
}

::google::protobuf::Metadata SerializedEllipsoid::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedMappoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SerializedMappoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_._has_bits_);
};

SerializedMappoint::SerializedMappoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedMappoint)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMappoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedMappoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SerializedMappoint::SerializedMappoint(
    ::google::protobuf::Arena* arena,
    const SerializedMappoint& from)
    : ::google::protobuf::Message(arena) {
  SerializedMappoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SerializedPosition>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.briefdescriptor_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::SerializedDescriptor>(
                              arena, *from._impl_.briefdescriptor_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, found_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::found_));

  // @@protoc_insertion_point(copy_constructor:SerializedMappoint)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMappoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedMappoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, found_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::found_));
}
SerializedMappoint::~SerializedMappoint() {
  // @@protoc_insertion_point(destructor:SerializedMappoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedMappoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.briefdescriptor_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedMappoint::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_._cached_size_),
              false,
          },
          &SerializedMappoint::MergeImpl,
          &SerializedMappoint::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> SerializedMappoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedMappoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedMappoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedMappoint, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.id_)}},
    // .SerializedPosition position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.position_)}},
    // float visible = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.visible_)}},
    // float found = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.found_)}},
    // .SerializedDescriptor briefdescriptor = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.briefdescriptor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .SerializedPosition position = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float visible = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.visible_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float found = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.found_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .SerializedDescriptor briefdescriptor = 5;
    {PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.briefdescriptor_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedPosition>()},
    {::_pbi::TcParser::GetTable<::SerializedDescriptor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedMappoint::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMappoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.briefdescriptor_ != nullptr);
      _impl_.briefdescriptor_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.found_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.found_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedMappoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMappoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .SerializedPosition position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  // float visible = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_visible = this->_internal_visible();
  ::uint32_t raw_visible;
  memcpy(&raw_visible, &tmp_visible, sizeof(tmp_visible));
  if (raw_visible != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_visible(), target);
  }

  // float found = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_found = this->_internal_found();
  ::uint32_t raw_found;
  memcpy(&raw_found, &tmp_found, sizeof(tmp_found));
  if (raw_found != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_found(), target);
  }

  // .SerializedDescriptor briefdescriptor = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.briefdescriptor_, _impl_.briefdescriptor_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMappoint)
  return target;
}

::size_t SerializedMappoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMappoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .SerializedPosition position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .SerializedDescriptor briefdescriptor = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.briefdescriptor_);
    }

  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // float visible = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_visible = this->_internal_visible();
  ::uint32_t raw_visible;
  memcpy(&raw_visible, &tmp_visible, sizeof(tmp_visible));
  if (raw_visible != 0) {
    total_size += 5;
  }

  // float found = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_found = this->_internal_found();
  ::uint32_t raw_found;
  memcpy(&raw_found, &tmp_found, sizeof(tmp_found));
  if (raw_found != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedMappoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedMappoint*>(&to_msg);
  auto& from = static_cast<const SerializedMappoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedMappoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedPosition>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.briefdescriptor_ != nullptr);
      if (_this->_impl_.briefdescriptor_ == nullptr) {
        _this->_impl_.briefdescriptor_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedDescriptor>(arena, *from._impl_.briefdescriptor_);
      } else {
        _this->_impl_.briefdescriptor_->MergeFrom(*from._impl_.briefdescriptor_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_visible = from._internal_visible();
  ::uint32_t raw_visible;
  memcpy(&raw_visible, &tmp_visible, sizeof(tmp_visible));
  if (raw_visible != 0) {
    _this->_impl_.visible_ = from._impl_.visible_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_found = from._internal_found();
  ::uint32_t raw_found;
  memcpy(&raw_found, &tmp_found, sizeof(tmp_found));
  if (raw_found != 0) {
    _this->_impl_.found_ = from._impl_.found_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedMappoint::CopyFrom(const SerializedMappoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMappoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedMappoint::InternalSwap(SerializedMappoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.found_)
      + sizeof(SerializedMappoint::_impl_.found_)
      - PROTOBUF_FIELD_OFFSET(SerializedMappoint, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata SerializedMappoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedMappointArray::_Internal {
 public:
};

SerializedMappointArray::SerializedMappointArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedMappointArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMappointArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedMappointArray& from_msg)
      : mappoint_{visibility, arena, from.mappoint_},
        _cached_size_{0} {}

SerializedMappointArray::SerializedMappointArray(
    ::google::protobuf::Arena* arena,
    const SerializedMappointArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedMappointArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedMappointArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMappointArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mappoint_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedMappointArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedMappointArray::~SerializedMappointArray() {
  // @@protoc_insertion_point(destructor:SerializedMappointArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedMappointArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedMappointArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedMappointArray, _impl_._cached_size_),
              false,
          },
          &SerializedMappointArray::MergeImpl,
          &SerializedMappointArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedMappointArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedMappointArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedMappointArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedMappoint mappoint = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMappointArray, _impl_.mappoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedMappoint mappoint = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedMappointArray, _impl_.mappoint_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedMappoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedMappointArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMappointArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mappoint_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedMappointArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMappointArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedMappoint mappoint = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_mappoint_size());
       i < n; i++) {
    const auto& repfield = this->_internal_mappoint().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMappointArray)
  return target;
}

::size_t SerializedMappointArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMappointArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedMappoint mappoint = 1;
  total_size += 1UL * this->_internal_mappoint_size();
  for (const auto& msg : this->_internal_mappoint()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedMappointArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedMappointArray*>(&to_msg);
  auto& from = static_cast<const SerializedMappointArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedMappointArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mappoint()->MergeFrom(
      from._internal_mappoint());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedMappointArray::CopyFrom(const SerializedMappointArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMappointArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedMappointArray::InternalSwap(SerializedMappointArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mappoint_.InternalSwap(&other->_impl_.mappoint_);
}

::google::protobuf::Metadata SerializedMappointArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedMapobject::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SerializedMapobject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_._has_bits_);
};

SerializedMapobject::SerializedMapobject(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedMapobject)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMapobject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedMapobject& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SerializedMapobject::SerializedMapobject(
    ::google::protobuf::Arena* arena,
    const SerializedMapobject& from)
    : ::google::protobuf::Message(arena) {
  SerializedMapobject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ellipsoid_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SerializedEllipsoid>(
                              arena, *from._impl_.ellipsoid_)
                        : nullptr;
  _impl_.object_track_id_ = from._impl_.object_track_id_;

  // @@protoc_insertion_point(copy_constructor:SerializedMapobject)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMapobject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedMapobject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ellipsoid_),
           0,
           offsetof(Impl_, object_track_id_) -
               offsetof(Impl_, ellipsoid_) +
               sizeof(Impl_::object_track_id_));
}
SerializedMapobject::~SerializedMapobject() {
  // @@protoc_insertion_point(destructor:SerializedMapobject)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedMapobject::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ellipsoid_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedMapobject::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_._cached_size_),
              false,
          },
          &SerializedMapobject::MergeImpl,
          &SerializedMapobject::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SerializedMapobject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedMapobject_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedMapobject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 object_track_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedMapobject, _impl_.object_track_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.object_track_id_)}},
    // .SerializedEllipsoid ellipsoid = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.ellipsoid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SerializedEllipsoid ellipsoid = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.ellipsoid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 object_track_id = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.object_track_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedEllipsoid>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedMapobject::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMapobject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ellipsoid_ != nullptr);
    _impl_.ellipsoid_->Clear();
  }
  _impl_.object_track_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedMapobject::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMapobject)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SerializedEllipsoid ellipsoid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.ellipsoid_, _impl_.ellipsoid_->GetCachedSize(), target, stream);
  }

  // uint32 object_track_id = 2;
  if (this->_internal_object_track_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_object_track_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMapobject)
  return target;
}

::size_t SerializedMapobject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMapobject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .SerializedEllipsoid ellipsoid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ellipsoid_);
  }

  // uint32 object_track_id = 2;
  if (this->_internal_object_track_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_object_track_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedMapobject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedMapobject*>(&to_msg);
  auto& from = static_cast<const SerializedMapobject&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedMapobject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ellipsoid_ != nullptr);
    if (_this->_impl_.ellipsoid_ == nullptr) {
      _this->_impl_.ellipsoid_ =
          ::google::protobuf::Message::CopyConstruct<::SerializedEllipsoid>(arena, *from._impl_.ellipsoid_);
    } else {
      _this->_impl_.ellipsoid_->MergeFrom(*from._impl_.ellipsoid_);
    }
  }
  if (from._internal_object_track_id() != 0) {
    _this->_impl_.object_track_id_ = from._impl_.object_track_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedMapobject::CopyFrom(const SerializedMapobject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMapobject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedMapobject::InternalSwap(SerializedMapobject* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.object_track_id_)
      + sizeof(SerializedMapobject::_impl_.object_track_id_)
      - PROTOBUF_FIELD_OFFSET(SerializedMapobject, _impl_.ellipsoid_)>(
          reinterpret_cast<char*>(&_impl_.ellipsoid_),
          reinterpret_cast<char*>(&other->_impl_.ellipsoid_));
}

::google::protobuf::Metadata SerializedMapobject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedMapobjectArray::_Internal {
 public:
};

SerializedMapobjectArray::SerializedMapobjectArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedMapobjectArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMapobjectArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedMapobjectArray& from_msg)
      : mapobject_{visibility, arena, from.mapobject_},
        _cached_size_{0} {}

SerializedMapobjectArray::SerializedMapobjectArray(
    ::google::protobuf::Arena* arena,
    const SerializedMapobjectArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedMapobjectArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedMapobjectArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedMapobjectArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mapobject_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedMapobjectArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedMapobjectArray::~SerializedMapobjectArray() {
  // @@protoc_insertion_point(destructor:SerializedMapobjectArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedMapobjectArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedMapobjectArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedMapobjectArray, _impl_._cached_size_),
              false,
          },
          &SerializedMapobjectArray::MergeImpl,
          &SerializedMapobjectArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedMapobjectArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedMapobjectArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedMapobjectArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedMapobject mapobject = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedMapobjectArray, _impl_.mapobject_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedMapobject mapobject = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedMapobjectArray, _impl_.mapobject_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedMapobject>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedMapobjectArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMapobjectArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapobject_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedMapobjectArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMapobjectArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedMapobject mapobject = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_mapobject_size());
       i < n; i++) {
    const auto& repfield = this->_internal_mapobject().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMapobjectArray)
  return target;
}

::size_t SerializedMapobjectArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMapobjectArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedMapobject mapobject = 1;
  total_size += 1UL * this->_internal_mapobject_size();
  for (const auto& msg : this->_internal_mapobject()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedMapobjectArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedMapobjectArray*>(&to_msg);
  auto& from = static_cast<const SerializedMapobjectArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedMapobjectArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mapobject()->MergeFrom(
      from._internal_mapobject());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedMapobjectArray::CopyFrom(const SerializedMapobjectArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMapobjectArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedMapobjectArray::InternalSwap(SerializedMapobjectArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mapobject_.InternalSwap(&other->_impl_.mapobject_);
}

::google::protobuf::Metadata SerializedMapobjectArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedBBox2::_Internal {
 public:
};

SerializedBBox2::SerializedBBox2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedBBox2)
}
SerializedBBox2::SerializedBBox2(
    ::google::protobuf::Arena* arena, const SerializedBBox2& from)
    : SerializedBBox2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SerializedBBox2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedBBox2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xmin_),
           0,
           offsetof(Impl_, ymax_) -
               offsetof(Impl_, xmin_) +
               sizeof(Impl_::ymax_));
}
SerializedBBox2::~SerializedBBox2() {
  // @@protoc_insertion_point(destructor:SerializedBBox2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedBBox2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedBBox2::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_._cached_size_),
              false,
          },
          &SerializedBBox2::MergeImpl,
          &SerializedBBox2::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> SerializedBBox2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SerializedBBox2_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedBBox2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float ymax = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.ymax_)}},
    // float xmin = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.xmin_)}},
    // float ymin = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.ymin_)}},
    // float xmax = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.xmax_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float xmin = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.xmin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ymin = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.ymin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float xmax = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.xmax_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ymax = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.ymax_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SerializedBBox2::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedBBox2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.xmin_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ymax_) -
      reinterpret_cast<char*>(&_impl_.xmin_)) + sizeof(_impl_.ymax_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedBBox2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedBBox2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float xmin = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmin = this->_internal_xmin();
  ::uint32_t raw_xmin;
  memcpy(&raw_xmin, &tmp_xmin, sizeof(tmp_xmin));
  if (raw_xmin != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_xmin(), target);
  }

  // float ymin = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymin = this->_internal_ymin();
  ::uint32_t raw_ymin;
  memcpy(&raw_ymin, &tmp_ymin, sizeof(tmp_ymin));
  if (raw_ymin != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_ymin(), target);
  }

  // float xmax = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmax = this->_internal_xmax();
  ::uint32_t raw_xmax;
  memcpy(&raw_xmax, &tmp_xmax, sizeof(tmp_xmax));
  if (raw_xmax != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_xmax(), target);
  }

  // float ymax = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymax = this->_internal_ymax();
  ::uint32_t raw_ymax;
  memcpy(&raw_ymax, &tmp_ymax, sizeof(tmp_ymax));
  if (raw_ymax != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_ymax(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedBBox2)
  return target;
}

::size_t SerializedBBox2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedBBox2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float xmin = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmin = this->_internal_xmin();
  ::uint32_t raw_xmin;
  memcpy(&raw_xmin, &tmp_xmin, sizeof(tmp_xmin));
  if (raw_xmin != 0) {
    total_size += 5;
  }

  // float ymin = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymin = this->_internal_ymin();
  ::uint32_t raw_ymin;
  memcpy(&raw_ymin, &tmp_ymin, sizeof(tmp_ymin));
  if (raw_ymin != 0) {
    total_size += 5;
  }

  // float xmax = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmax = this->_internal_xmax();
  ::uint32_t raw_xmax;
  memcpy(&raw_xmax, &tmp_xmax, sizeof(tmp_xmax));
  if (raw_xmax != 0) {
    total_size += 5;
  }

  // float ymax = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymax = this->_internal_ymax();
  ::uint32_t raw_ymax;
  memcpy(&raw_ymax, &tmp_ymax, sizeof(tmp_ymax));
  if (raw_ymax != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedBBox2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedBBox2*>(&to_msg);
  auto& from = static_cast<const SerializedBBox2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedBBox2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmin = from._internal_xmin();
  ::uint32_t raw_xmin;
  memcpy(&raw_xmin, &tmp_xmin, sizeof(tmp_xmin));
  if (raw_xmin != 0) {
    _this->_impl_.xmin_ = from._impl_.xmin_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymin = from._internal_ymin();
  ::uint32_t raw_ymin;
  memcpy(&raw_ymin, &tmp_ymin, sizeof(tmp_ymin));
  if (raw_ymin != 0) {
    _this->_impl_.ymin_ = from._impl_.ymin_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xmax = from._internal_xmax();
  ::uint32_t raw_xmax;
  memcpy(&raw_xmax, &tmp_xmax, sizeof(tmp_xmax));
  if (raw_xmax != 0) {
    _this->_impl_.xmax_ = from._impl_.xmax_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ymax = from._internal_ymax();
  ::uint32_t raw_ymax;
  memcpy(&raw_ymax, &tmp_ymax, sizeof(tmp_ymax));
  if (raw_ymax != 0) {
    _this->_impl_.ymax_ = from._impl_.ymax_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedBBox2::CopyFrom(const SerializedBBox2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedBBox2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedBBox2::InternalSwap(SerializedBBox2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.ymax_)
      + sizeof(SerializedBBox2::_impl_.ymax_)
      - PROTOBUF_FIELD_OFFSET(SerializedBBox2, _impl_.xmin_)>(
          reinterpret_cast<char*>(&_impl_.xmin_),
          reinterpret_cast<char*>(&other->_impl_.xmin_));
}

::google::protobuf::Metadata SerializedBBox2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedObjectTrack::_Internal {
 public:
};

SerializedObjectTrack::SerializedObjectTrack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedObjectTrack)
}
inline PROTOBUF_NDEBUG_INLINE SerializedObjectTrack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedObjectTrack& from_msg)
      : kf_bboxes_{visibility, arena, from.kf_bboxes_},
        kf_indices_{visibility, arena, from.kf_indices_},
        _kf_indices_cached_byte_size_{0},
        kf_scores_{visibility, arena, from.kf_scores_},
        _cached_size_{0} {}

SerializedObjectTrack::SerializedObjectTrack(
    ::google::protobuf::Arena* arena,
    const SerializedObjectTrack& from)
    : ::google::protobuf::Message(arena) {
  SerializedObjectTrack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:SerializedObjectTrack)
}
inline PROTOBUF_NDEBUG_INLINE SerializedObjectTrack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kf_bboxes_{visibility, arena},
        kf_indices_{visibility, arena},
        _kf_indices_cached_byte_size_{0},
        kf_scores_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedObjectTrack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::status_));
}
SerializedObjectTrack::~SerializedObjectTrack() {
  // @@protoc_insertion_point(destructor:SerializedObjectTrack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedObjectTrack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedObjectTrack::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_._cached_size_),
              false,
          },
          &SerializedObjectTrack::MergeImpl,
          &SerializedObjectTrack::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 0, 2> SerializedObjectTrack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedObjectTrack_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedObjectTrack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.id_)}},
    // uint32 cat = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.cat_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.cat_)}},
    // uint32 last_frame_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.last_frame_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.last_frame_id_)}},
    // uint32 color_r = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.color_r_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_r_)}},
    // uint32 color_g = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.color_g_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_g_)}},
    // uint32 color_b = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.color_b_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_b_)}},
    // uint32 status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedObjectTrack, _impl_.status_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.status_)}},
    // repeated .SerializedBBox2 kf_bboxes = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_bboxes_)}},
    // repeated uint32 kf_indices = 9;
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_indices_)}},
    // repeated double kf_scores = 10;
    {::_pbi::TcParser::FastF64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_scores_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cat = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.cat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 last_frame_id = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.last_frame_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 color_r = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 color_g = 5;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_g_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 color_b = 6;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.color_b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 status = 7;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .SerializedBBox2 kf_bboxes = 8;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_bboxes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 kf_indices = 9;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_indices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated double kf_scores = 10;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.kf_scores_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedBBox2>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedObjectTrack::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedObjectTrack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kf_bboxes_.Clear();
  _impl_.kf_indices_.Clear();
  _impl_.kf_scores_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedObjectTrack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedObjectTrack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // uint32 cat = 2;
  if (this->_internal_cat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_cat(), target);
  }

  // uint32 last_frame_id = 3;
  if (this->_internal_last_frame_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_last_frame_id(), target);
  }

  // uint32 color_r = 4;
  if (this->_internal_color_r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_color_r(), target);
  }

  // uint32 color_g = 5;
  if (this->_internal_color_g() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_color_g(), target);
  }

  // uint32 color_b = 6;
  if (this->_internal_color_b() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_color_b(), target);
  }

  // uint32 status = 7;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_status(), target);
  }

  // repeated .SerializedBBox2 kf_bboxes = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_kf_bboxes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_kf_bboxes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 kf_indices = 9;
  {
    int byte_size = _impl_._kf_indices_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          9, _internal_kf_indices(), byte_size, target);
    }
  }

  // repeated double kf_scores = 10;
  if (this->_internal_kf_scores_size() > 0) {
    target = stream->WriteFixedPacked(10, _internal_kf_scores(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedObjectTrack)
  return target;
}

::size_t SerializedObjectTrack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedObjectTrack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedBBox2 kf_bboxes = 8;
  total_size += 1UL * this->_internal_kf_bboxes_size();
  for (const auto& msg : this->_internal_kf_bboxes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 kf_indices = 9;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_kf_indices())
    ;
    _impl_._kf_indices_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double kf_scores = 10;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_kf_scores_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 cat = 2;
  if (this->_internal_cat() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cat());
  }

  // uint32 last_frame_id = 3;
  if (this->_internal_last_frame_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_last_frame_id());
  }

  // uint32 color_r = 4;
  if (this->_internal_color_r() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color_r());
  }

  // uint32 color_g = 5;
  if (this->_internal_color_g() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color_g());
  }

  // uint32 color_b = 6;
  if (this->_internal_color_b() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color_b());
  }

  // uint32 status = 7;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedObjectTrack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedObjectTrack*>(&to_msg);
  auto& from = static_cast<const SerializedObjectTrack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedObjectTrack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kf_bboxes()->MergeFrom(
      from._internal_kf_bboxes());
  _this->_internal_mutable_kf_indices()->MergeFrom(from._internal_kf_indices());
  _this->_internal_mutable_kf_scores()->MergeFrom(from._internal_kf_scores());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_cat() != 0) {
    _this->_impl_.cat_ = from._impl_.cat_;
  }
  if (from._internal_last_frame_id() != 0) {
    _this->_impl_.last_frame_id_ = from._impl_.last_frame_id_;
  }
  if (from._internal_color_r() != 0) {
    _this->_impl_.color_r_ = from._impl_.color_r_;
  }
  if (from._internal_color_g() != 0) {
    _this->_impl_.color_g_ = from._impl_.color_g_;
  }
  if (from._internal_color_b() != 0) {
    _this->_impl_.color_b_ = from._impl_.color_b_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedObjectTrack::CopyFrom(const SerializedObjectTrack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedObjectTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedObjectTrack::InternalSwap(SerializedObjectTrack* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.kf_bboxes_.InternalSwap(&other->_impl_.kf_bboxes_);
  _impl_.kf_indices_.InternalSwap(&other->_impl_.kf_indices_);
  _impl_.kf_scores_.InternalSwap(&other->_impl_.kf_scores_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.status_)
      + sizeof(SerializedObjectTrack::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SerializedObjectTrack, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SerializedObjectTrack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedObjectTrackArray::_Internal {
 public:
};

SerializedObjectTrackArray::SerializedObjectTrackArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedObjectTrackArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedObjectTrackArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedObjectTrackArray& from_msg)
      : objecttrack_{visibility, arena, from.objecttrack_},
        _cached_size_{0} {}

SerializedObjectTrackArray::SerializedObjectTrackArray(
    ::google::protobuf::Arena* arena,
    const SerializedObjectTrackArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedObjectTrackArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedObjectTrackArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedObjectTrackArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : objecttrack_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedObjectTrackArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedObjectTrackArray::~SerializedObjectTrackArray() {
  // @@protoc_insertion_point(destructor:SerializedObjectTrackArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedObjectTrackArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedObjectTrackArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedObjectTrackArray, _impl_._cached_size_),
              false,
          },
          &SerializedObjectTrackArray::MergeImpl,
          &SerializedObjectTrackArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedObjectTrackArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedObjectTrackArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedObjectTrackArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedObjectTrack objecttrack = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedObjectTrackArray, _impl_.objecttrack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedObjectTrack objecttrack = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedObjectTrackArray, _impl_.objecttrack_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedObjectTrack>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedObjectTrackArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedObjectTrackArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objecttrack_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedObjectTrackArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedObjectTrackArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedObjectTrack objecttrack = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_objecttrack_size());
       i < n; i++) {
    const auto& repfield = this->_internal_objecttrack().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedObjectTrackArray)
  return target;
}

::size_t SerializedObjectTrackArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedObjectTrackArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedObjectTrack objecttrack = 1;
  total_size += 1UL * this->_internal_objecttrack_size();
  for (const auto& msg : this->_internal_objecttrack()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedObjectTrackArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedObjectTrackArray*>(&to_msg);
  auto& from = static_cast<const SerializedObjectTrackArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedObjectTrackArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_objecttrack()->MergeFrom(
      from._internal_objecttrack());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedObjectTrackArray::CopyFrom(const SerializedObjectTrackArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedObjectTrackArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedObjectTrackArray::InternalSwap(SerializedObjectTrackArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.objecttrack_.InternalSwap(&other->_impl_.objecttrack_);
}

::google::protobuf::Metadata SerializedObjectTrackArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKeyframe::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SerializedKeyframe>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_._has_bits_);
};

SerializedKeyframe::SerializedKeyframe(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKeyframe)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedKeyframe& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        loopedgesids_{visibility, arena, from.loopedgesids_},
        _loopedgesids_cached_byte_size_{0} {}

SerializedKeyframe::SerializedKeyframe(
    ::google::protobuf::Arena* arena,
    const SerializedKeyframe& from)
    : ::google::protobuf::Message(arena) {
  SerializedKeyframe* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SerializedPose>(
                              arena, *from._impl_.pose_)
                        : nullptr;
  _impl_.kmatrix_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::SerializedK>(
                              arena, *from._impl_.kmatrix_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:SerializedKeyframe)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        loopedgesids_{visibility, arena},
        _loopedgesids_cached_byte_size_{0} {}

inline void SerializedKeyframe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, pose_) +
               sizeof(Impl_::timestamp_));
}
SerializedKeyframe::~SerializedKeyframe() {
  // @@protoc_insertion_point(destructor:SerializedKeyframe)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKeyframe::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pose_;
  delete _impl_.kmatrix_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKeyframe::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_._cached_size_),
              false,
          },
          &SerializedKeyframe::MergeImpl,
          &SerializedKeyframe::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> SerializedKeyframe::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedKeyframe_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKeyframe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedKeyframe, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.id_)}},
    // .SerializedPose pose = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.pose_)}},
    // .SerializedK kmatrix = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.kmatrix_)}},
    // uint32 kindex = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedKeyframe, _impl_.kindex_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.kindex_)}},
    // repeated uint32 loopedgesids = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.loopedgesids_)}},
    // double timestamp = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .SerializedPose pose = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.pose_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .SerializedK kmatrix = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.kmatrix_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 kindex = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.kindex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 loopedgesids = 5;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.loopedgesids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // double timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedPose>()},
    {::_pbi::TcParser::GetTable<::SerializedK>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loopedgesids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.kmatrix_ != nullptr);
      _impl_.kmatrix_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKeyframe::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframe)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .SerializedPose pose = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.pose_, _impl_.pose_->GetCachedSize(), target, stream);
  }

  // .SerializedK kmatrix = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.kmatrix_, _impl_.kmatrix_->GetCachedSize(), target, stream);
  }

  // uint32 kindex = 4;
  if (this->_internal_kindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_kindex(), target);
  }

  // repeated uint32 loopedgesids = 5;
  {
    int byte_size = _impl_._loopedgesids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          5, _internal_loopedgesids(), byte_size, target);
    }
  }

  // double timestamp = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestamp = this->_internal_timestamp();
  ::uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframe)
  return target;
}

::size_t SerializedKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframe)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint32 loopedgesids = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_loopedgesids())
    ;
    _impl_._loopedgesids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .SerializedPose pose = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pose_);
    }

    // .SerializedK kmatrix = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.kmatrix_);
    }

  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 kindex = 4;
  if (this->_internal_kindex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_kindex());
  }

  // double timestamp = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestamp = this->_internal_timestamp();
  ::uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKeyframe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKeyframe*>(&to_msg);
  auto& from = static_cast<const SerializedKeyframe&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loopedgesids()->MergeFrom(from._internal_loopedgesids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedPose>(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.kmatrix_ != nullptr);
      if (_this->_impl_.kmatrix_ == nullptr) {
        _this->_impl_.kmatrix_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedK>(arena, *from._impl_.kmatrix_);
      } else {
        _this->_impl_.kmatrix_->MergeFrom(*from._impl_.kmatrix_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_kindex() != 0) {
    _this->_impl_.kindex_ = from._impl_.kindex_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestamp = from._internal_timestamp();
  ::uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKeyframe::CopyFrom(const SerializedKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKeyframe::InternalSwap(SerializedKeyframe* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.loopedgesids_.InternalSwap(&other->_impl_.loopedgesids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.timestamp_)
      + sizeof(SerializedKeyframe::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(SerializedKeyframe, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::google::protobuf::Metadata SerializedKeyframe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKeyframeArray::_Internal {
 public:
};

SerializedKeyframeArray::SerializedKeyframeArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKeyframeArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedKeyframeArray& from_msg)
      : keyframe_{visibility, arena, from.keyframe_},
        _cached_size_{0} {}

SerializedKeyframeArray::SerializedKeyframeArray(
    ::google::protobuf::Arena* arena,
    const SerializedKeyframeArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedKeyframeArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : keyframe_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedKeyframeArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedKeyframeArray::~SerializedKeyframeArray() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKeyframeArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKeyframeArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKeyframeArray, _impl_._cached_size_),
              false,
          },
          &SerializedKeyframeArray::MergeImpl,
          &SerializedKeyframeArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedKeyframeArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedKeyframeArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKeyframeArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedKeyframe keyframe = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframeArray, _impl_.keyframe_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedKeyframe keyframe = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframeArray, _impl_.keyframe_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedKeyframe>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedKeyframeArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keyframe_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKeyframeArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedKeyframe keyframe = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_keyframe_size());
       i < n; i++) {
    const auto& repfield = this->_internal_keyframe().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeArray)
  return target;
}

::size_t SerializedKeyframeArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedKeyframe keyframe = 1;
  total_size += 1UL * this->_internal_keyframe_size();
  for (const auto& msg : this->_internal_keyframe()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKeyframeArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKeyframeArray*>(&to_msg);
  auto& from = static_cast<const SerializedKeyframeArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keyframe()->MergeFrom(
      from._internal_keyframe());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKeyframeArray::CopyFrom(const SerializedKeyframeArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKeyframeArray::InternalSwap(SerializedKeyframeArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keyframe_.InternalSwap(&other->_impl_.keyframe_);
}

::google::protobuf::Metadata SerializedKeyframeArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedFeature::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SerializedFeature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_._has_bits_);
};

SerializedFeature::SerializedFeature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedFeature)
}
inline PROTOBUF_NDEBUG_INLINE SerializedFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedFeature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SerializedFeature::SerializedFeature(
    ::google::protobuf::Arena* arena,
    const SerializedFeature& from)
    : ::google::protobuf::Message(arena) {
  SerializedFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.keypoint_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SerializedKeypoint>(
                              arena, *from._impl_.keypoint_)
                        : nullptr;
  _impl_.briefdescriptor_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::SerializedDescriptor>(
                              arena, *from._impl_.briefdescriptor_)
                        : nullptr;
  _impl_.mappoint_id_ = from._impl_.mappoint_id_;

  // @@protoc_insertion_point(copy_constructor:SerializedFeature)
}
inline PROTOBUF_NDEBUG_INLINE SerializedFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SerializedFeature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, keypoint_),
           0,
           offsetof(Impl_, mappoint_id_) -
               offsetof(Impl_, keypoint_) +
               sizeof(Impl_::mappoint_id_));
}
SerializedFeature::~SerializedFeature() {
  // @@protoc_insertion_point(destructor:SerializedFeature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedFeature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.keypoint_;
  delete _impl_.briefdescriptor_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedFeature::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_._cached_size_),
              false,
          },
          &SerializedFeature::MergeImpl,
          &SerializedFeature::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SerializedFeature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedFeature_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedFeature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SerializedDescriptor briefdescriptor = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.briefdescriptor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 mappoint_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedFeature, _impl_.mappoint_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.mappoint_id_)}},
    // .SerializedKeypoint keypoint = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.keypoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 mappoint_id = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.mappoint_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .SerializedKeypoint keypoint = 3;
    {PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.keypoint_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .SerializedDescriptor briefdescriptor = 4;
    {PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.briefdescriptor_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedKeypoint>()},
    {::_pbi::TcParser::GetTable<::SerializedDescriptor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.keypoint_ != nullptr);
      _impl_.keypoint_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.briefdescriptor_ != nullptr);
      _impl_.briefdescriptor_->Clear();
    }
  }
  _impl_.mappoint_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedFeature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 mappoint_id = 2;
  if (this->_internal_mappoint_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_mappoint_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .SerializedKeypoint keypoint = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.keypoint_, _impl_.keypoint_->GetCachedSize(), target, stream);
  }

  // .SerializedDescriptor briefdescriptor = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.briefdescriptor_, _impl_.briefdescriptor_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedFeature)
  return target;
}

::size_t SerializedFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .SerializedKeypoint keypoint = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.keypoint_);
    }

    // .SerializedDescriptor briefdescriptor = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.briefdescriptor_);
    }

  }
  // uint32 mappoint_id = 2;
  if (this->_internal_mappoint_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mappoint_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedFeature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedFeature*>(&to_msg);
  auto& from = static_cast<const SerializedFeature&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.keypoint_ != nullptr);
      if (_this->_impl_.keypoint_ == nullptr) {
        _this->_impl_.keypoint_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedKeypoint>(arena, *from._impl_.keypoint_);
      } else {
        _this->_impl_.keypoint_->MergeFrom(*from._impl_.keypoint_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.briefdescriptor_ != nullptr);
      if (_this->_impl_.briefdescriptor_ == nullptr) {
        _this->_impl_.briefdescriptor_ =
            ::google::protobuf::Message::CopyConstruct<::SerializedDescriptor>(arena, *from._impl_.briefdescriptor_);
      } else {
        _this->_impl_.briefdescriptor_->MergeFrom(*from._impl_.briefdescriptor_);
      }
    }
  }
  if (from._internal_mappoint_id() != 0) {
    _this->_impl_.mappoint_id_ = from._impl_.mappoint_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedFeature::CopyFrom(const SerializedFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedFeature::InternalSwap(SerializedFeature* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.mappoint_id_)
      + sizeof(SerializedFeature::_impl_.mappoint_id_)
      - PROTOBUF_FIELD_OFFSET(SerializedFeature, _impl_.keypoint_)>(
          reinterpret_cast<char*>(&_impl_.keypoint_),
          reinterpret_cast<char*>(&other->_impl_.keypoint_));
}

::google::protobuf::Metadata SerializedFeature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKeyframeFeatures::_Internal {
 public:
};

SerializedKeyframeFeatures::SerializedKeyframeFeatures(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKeyframeFeatures)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeFeatures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedKeyframeFeatures& from_msg)
      : feature_{visibility, arena, from.feature_},
        _cached_size_{0} {}

SerializedKeyframeFeatures::SerializedKeyframeFeatures(
    ::google::protobuf::Arena* arena,
    const SerializedKeyframeFeatures& from)
    : ::google::protobuf::Message(arena) {
  SerializedKeyframeFeatures* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.keyframe_id_ = from._impl_.keyframe_id_;

  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeFeatures)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeFeatures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : feature_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedKeyframeFeatures::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.keyframe_id_ = {};
}
SerializedKeyframeFeatures::~SerializedKeyframeFeatures() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeFeatures)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKeyframeFeatures::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKeyframeFeatures::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeatures, _impl_._cached_size_),
              false,
          },
          &SerializedKeyframeFeatures::MergeImpl,
          &SerializedKeyframeFeatures::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SerializedKeyframeFeatures::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedKeyframeFeatures_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKeyframeFeatures>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedFeature feature = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeatures, _impl_.feature_)}},
    // uint32 keyframe_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerializedKeyframeFeatures, _impl_.keyframe_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeatures, _impl_.keyframe_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 keyframe_id = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeatures, _impl_.keyframe_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .SerializedFeature feature = 2;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeatures, _impl_.feature_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedFeature>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedKeyframeFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeFeatures)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_.Clear();
  _impl_.keyframe_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKeyframeFeatures::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeFeatures)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 keyframe_id = 1;
  if (this->_internal_keyframe_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_keyframe_id(), target);
  }

  // repeated .SerializedFeature feature = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_feature_size());
       i < n; i++) {
    const auto& repfield = this->_internal_feature().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeFeatures)
  return target;
}

::size_t SerializedKeyframeFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeFeatures)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedFeature feature = 2;
  total_size += 1UL * this->_internal_feature_size();
  for (const auto& msg : this->_internal_feature()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 keyframe_id = 1;
  if (this->_internal_keyframe_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_keyframe_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKeyframeFeatures::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKeyframeFeatures*>(&to_msg);
  auto& from = static_cast<const SerializedKeyframeFeatures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeFeatures)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_feature()->MergeFrom(
      from._internal_feature());
  if (from._internal_keyframe_id() != 0) {
    _this->_impl_.keyframe_id_ = from._impl_.keyframe_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKeyframeFeatures::CopyFrom(const SerializedKeyframeFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKeyframeFeatures::InternalSwap(SerializedKeyframeFeatures* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.feature_.InternalSwap(&other->_impl_.feature_);
        swap(_impl_.keyframe_id_, other->_impl_.keyframe_id_);
}

::google::protobuf::Metadata SerializedKeyframeFeatures::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerializedKeyframeFeaturesArray::_Internal {
 public:
};

SerializedKeyframeFeaturesArray::SerializedKeyframeFeaturesArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SerializedKeyframeFeaturesArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeFeaturesArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SerializedKeyframeFeaturesArray& from_msg)
      : feature_{visibility, arena, from.feature_},
        _cached_size_{0} {}

SerializedKeyframeFeaturesArray::SerializedKeyframeFeaturesArray(
    ::google::protobuf::Arena* arena,
    const SerializedKeyframeFeaturesArray& from)
    : ::google::protobuf::Message(arena) {
  SerializedKeyframeFeaturesArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeFeaturesArray)
}
inline PROTOBUF_NDEBUG_INLINE SerializedKeyframeFeaturesArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : feature_{visibility, arena},
        _cached_size_{0} {}

inline void SerializedKeyframeFeaturesArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SerializedKeyframeFeaturesArray::~SerializedKeyframeFeaturesArray() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeFeaturesArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SerializedKeyframeFeaturesArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SerializedKeyframeFeaturesArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeaturesArray, _impl_._cached_size_),
              false,
          },
          &SerializedKeyframeFeaturesArray::MergeImpl,
          &SerializedKeyframeFeaturesArray::kDescriptorMethods,
          &descriptor_table_osmap_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SerializedKeyframeFeaturesArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SerializedKeyframeFeaturesArray_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SerializedKeyframeFeaturesArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SerializedKeyframeFeatures feature = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeaturesArray, _impl_.feature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SerializedKeyframeFeatures feature = 1;
    {PROTOBUF_FIELD_OFFSET(SerializedKeyframeFeaturesArray, _impl_.feature_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SerializedKeyframeFeatures>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SerializedKeyframeFeaturesArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeFeaturesArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SerializedKeyframeFeaturesArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeFeaturesArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SerializedKeyframeFeatures feature = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_feature_size());
       i < n; i++) {
    const auto& repfield = this->_internal_feature().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeFeaturesArray)
  return target;
}

::size_t SerializedKeyframeFeaturesArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeFeaturesArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .SerializedKeyframeFeatures feature = 1;
  total_size += 1UL * this->_internal_feature_size();
  for (const auto& msg : this->_internal_feature()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SerializedKeyframeFeaturesArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerializedKeyframeFeaturesArray*>(&to_msg);
  auto& from = static_cast<const SerializedKeyframeFeaturesArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeFeaturesArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_feature()->MergeFrom(
      from._internal_feature());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerializedKeyframeFeaturesArray::CopyFrom(const SerializedKeyframeFeaturesArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeFeaturesArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerializedKeyframeFeaturesArray::InternalSwap(SerializedKeyframeFeaturesArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.feature_.InternalSwap(&other->_impl_.feature_);
}

::google::protobuf::Metadata SerializedKeyframeFeaturesArray::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_osmap_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
